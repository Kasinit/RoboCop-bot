import telebot
from telebot import types
import time
import random
from datetime import datetime

bot = telebot.TeleBot('6851890166:AAEFLs8joAESgw-nCb3BGbt7au78cqxhMdQ')

now = datetime.now()

@bot.message_handler(commands=['start'])
def start(message):
    markup=types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    btn1=types.KeyboardButton('–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫üé≤')
    btn2=types.KeyboardButton('–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞üé±')
    btn3=types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìö')
    btn4=types.KeyboardButton('–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ü§ì')
    markup.add(btn1,btn2,btn3,btn4)
    
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º. –ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.",reply_markup=markup)
    
    markup = types.InlineKeyboardMarkup()
    btn_my_site= types.InlineKeyboardButton(text='–ñ–º–∏', url='https://github.com/Kasinit/RoboCop-bot')
    markup.add(btn_my_site)
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ –≥–∏—Ç—Ö–∞–± –ø—Ä–æ–µ–∫—Ç–∞", reply_markup = markup)    


@bot.message_handler(commands=['help'])
def help(message):
    bot.reply_to(message, "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n/mute - –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è\n/unmute - —Ä–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n/version - –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞")


@bot.message_handler(commands=['kill'])
def kick_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫–∏–∫–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            bot.kick_chat_member(chat_id, user_id)
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} –±—ã–ª –∫–∏–∫–Ω—É—Ç.")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–∏–∫–Ω—É—Ç—å.")


@bot.message_handler(commands=['mute'])
def mute_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            duration = 60#4D4D4D#4D4D4D
            args = message.text.split()[1:]
            if args:
                try:
                    duration = int(args[0])
                except ValueError:
                    bot.reply_to(message, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.")
                    return
                if duration < 1:
                    bot.reply_to(message, "–í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
                    return
                if duration > 1440:
                    bot.reply_to(message, "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è - 1 –¥–µ–Ω—å.")
                    return
            bot.restrict_chat_member(chat_id, user_id, until_date=time.time()+duration*60)
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} –∑–∞–º—É—á–µ–Ω –Ω–∞ {duration} –º–∏–Ω—É—Ç.")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å.")


@bot.message_handler(commands=['unmute'])
def unmute_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        bot.restrict_chat_member(chat_id, user_id, can_send_messages=True, can_send_media_messages=True, can_send_other_messages=True, can_add_web_page_previews=True)
        bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} —Ä–∞–∑–º—É—á–µ–Ω.")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º—É—Ç–∏—Ç—å.")


@bot.message_handler(commands=['version'])
def ver(message):
    bot.send_message(message.chat.id, 'BETA 0.1')
    
@bot.callback_query_handler(func = lambda callback: callback.data)
def check_callback_data(callback):
    if callback.data == 'Monday':
        bot.send_message(callback.message.chat.id, '–†–∞–∑–≥–æ–≤–æ—Ä—ã –æ –≤–∞–∂–Ω–æ–º ‚úç(325)\n–§–∏–∑–∏–∫–∞ üöÄ(310)\n–ê–ª–≥–µ–±—Ä–∞ üßÆ(328) \n–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ üñäÔ∏è(118) \n–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ üñäÔ∏è(118) \n–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ üóΩ(324) \n–§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞ üí™(—Å–ø–æ—Ä—Ç–∑–∞–ª)')

    if callback.data == 'Tuesday':
        bot.send_message(callback.message.chat.id, '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ üìë(411)\n–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ üóΩ(411)\n–ò—Å—Ç–æ—Ä–∏—è üèõ(412) \n–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ ü™∂(118) \n–§–∏–∑–∏–∫–∞ üöÄ(316) \n–•–∏–º–∏—è üß™(325) \n–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ ü™∂(118) \n–û–ë–ñ ü§ï(310)')

    if callback.data == 'Wednesday':
        bot.send_message(callback.message.chat.id, '–§–∏–∑–∏–∫–∞ üöÄ(219) \n–ê–ª–≥–µ–±—Ä–∞ üßÆ(316) \n–ê–ª–≥–µ–±—Ä–∞ üßÆ(316) \n–ì–µ–æ–≥—Ä–∞—Ñ–∏—è üó∫Ô∏è(115) \n–ì–µ–æ–º–µ—Ç—Ä–∏—è üìê(316) \n–ë–∏–æ–ª–æ–≥–∏—è ü¶†(212)')

    if callback.data == 'Thursday':
        bot.send_message(callback.message.chat.id, '–ë–∏–ª–µ—Ç –≤ –±—É–¥—É—â–µ–µ üé´(325) \n–ê–ª–≥–µ–±—Ä–∞ üßÆ(408) \n–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ üñäÔ∏è(118) \n–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ üíª(304) \n–•–∏–º–∏—è üß™(325) \n–ò—Å—Ç–æ—Ä–∏—è üèõ(412)')

    if callback.data == 'Friday':
        bot.send_message(callback.message.chat.id, '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è üí°(111) \n–ì–µ–æ–º–µ—Ç—Ä–∏—è üìê(309) \n–§–∏–∑–∏–∫–∞ üöÄ(413) \n–ì–µ–æ–≥—Ä–∞—Ñ–∏—è üó∫Ô∏è(115) \n–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ üóΩ(324) \n–ë–∏–æ–ª–æ–≥–∏—è ü¶†(212) \n–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ ü™∂(118) \n–§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞ üí™(—Å–ø–æ—Ä—Ç–∑–∞–ª)')

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == '–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫üé≤':
        bot.send_message(message.chat.id, '–ù–∞ –∫—É–±–∏–∫–µ –≤—ã–ø–∞–ª–æ: ' + str(random.randint(1,6)))
        
    if message.text == '–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞üé±':
        a = 0
        a = random.randint(1,2)
        if a == 1:
            bot.send_message(message.chat.id, '–í—ã–ø–∞–ª –æ—Ä–µ–ªüé∞')
        if a == 2:
            bot.send_message(message.chat.id, '–í—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞üé∞')
            
    if message.text == '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ü§ì':
        bot.send_message(message.chat.id, '@elonmas_k\n@aspxps\n@indusBugaga')
        
    if message.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìö':
        kb = types.InlineKeyboardMarkup(row_width = 1)
        kbBtnMonday = types.InlineKeyboardButton(text = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫üòµ', callback_data = 'Monday')
        kbBtnTuesday = types.InlineKeyboardButton(text = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫‚Äçüòµ‚Äçüí´', callback_data = 'Tuesday')
        kbBtnWednesday = types.InlineKeyboardButton(text = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—Ä–µ–¥—ÉüôÅ', callback_data = 'Wednesday')
        kbBtnThursday = types.InlineKeyboardButton(text = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥üò¥', callback_data = 'Thursday')
        kbBtnFriday = types.InlineKeyboardButton(text = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—Éü•≥', callback_data = 'Friday')
        
        kb.add(kbBtnMonday, kbBtnTuesday, kbBtnWednesday, kbBtnThursday, kbBtnFriday)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏', reply_markup = kb)


bot.polling()
